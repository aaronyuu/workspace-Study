package cn.yuchuanxi;

import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.Arrays;
import java.util.Random;

import javax.jws.WebParam.Mode;

public class FileDemoJava  {

	/**
	 * @param args
	 * @throws IOException 
	 */
	public static void main(String[] args) throws IOException  {
		// TODO Auto-generated method stub
//		File file1 = new File("d:\\aa.txt");
//		File file2 = new File("d:\\mulu");
//
//		if (!file1.exists()) {
//			System.out.println("该文件不存在,现在创建文件");
//			try {
//				file1.createNewFile();
//			} catch (IOException e) {
//				// TODO Auto-generated catch block
//				e.printStackTrace();
//			}
//		}
//
//		if (file1.isDirectory()) {
//			System.out.println(file1.getName() + "是目录");
//		} else if (file1.isFile()) {
//			System.out.println(file1.getName() + "是一个文件");
//		} else {
//			System.out.println("文件不存在!!");
//		}
//
//		if (!file2.exists()) {
//			System.out.println("该文件不存在,现在创建文件");
//			file2.mkdir();
//			/**
//			 * 多级目录使用mkdirs()
//			 */
////				file2.mkdirs();
//		}
//		
//		
//		/**
//		 * 判断是否是文件夹
//		 */
//		System.out.println(file1.isDirectory());
//		/** 
//		 * 判断是否是文件
//		 */
//		System.out.println(file2.isFile());
//		/**
//		 * 删除文件/文件夹
//		 */
//		file1.delete();
//		System.out.println(file1);
//		System.out.println(file1.getAbsolutePath());
//		System.out.println(file1.getParent());
//		System.out.println(file1.getName());
//		
//		FileUtils.listFile("D:\\mulu");

		File dir=new File("test");
		if(!dir.exists()){
			dir.mkdir();
		}
		File file=new File(dir,"aa.txt");
		if (!file.exists()){
			file.createNewFile();
		}
		
	 RandomAccessFile raf=new RandomAccessFile(file, "rw");
	 /**
	  * 写入整形数据
	  */
	 int i=0x7fff8ffe;
	 System.out.println(i);
	 raf.writeInt(i);
	 
//	 /**
//	  * 写入字符串
//	  */
//	 String s="China";
//	 raf.writeBytes(s);
//	 
//	 /**
//	  * 能写对吗?
//	  */
//	 String s2="Hello";
//	 byte[] b2=s2.getBytes();
//	 raf.write(b2);
	 
	 
	 /**
	  * 读文件测试
	  * 读之前先将指针移动到头部
	  */
	 raf.seek(0);
	String readline;
	readline=raf.readLine();
	System.out.println(readline);
	
	//再次读之前,还要把指针移动到头部
	raf.seek(0);
	byte[] buf=new byte[(int)raf.length()];
	raf.read(buf);
	System.out.println(Arrays.toString(buf));
	 
	
	//最后要记得关闭raf
	raf.close();
	}
}
